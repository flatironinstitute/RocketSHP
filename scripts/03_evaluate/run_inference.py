import torch
from loguru import logger

from rocketshp.esm3 import (
    _get_model,
    _get_structure_vae,
    _get_tokenizers,
    esm3_embed,
)
from rocketshp.modeling.architectures import DynCorrModelWithTemperature

device = torch.device("cuda:0")

# elf3 (disordered)
# SEQUENCE = "MKRGKDEEKILEPMFPRLHVNDADKGGPRAPPRNKMALYEQLSIPSQRFGDHGTMNSRSNNTSTLVHPGPSSQPCGVERNLSVQHLDSSAANQATEKFVSQMSFMENVRSSAQHDQRKMVREEEDFAVPVYINSRRSQSHGRTKSGIEKEKHTPMVAPSSHHSIRFQEVNQTGSKQNVCLATCSKPEVRDQVKANARSGGFVISLDVSVTEEIDLEKSASSHDRVNDYNASLRQESRNRLYRDGGKTRLKDTDNGAESHLATENHSQEGHGSPEDIDNDREYSKSRACASLQQINEEASDDVSDDSMVDSISSIDVSPDDVVGILGQKRFWRARKAIANQQRVFAVQLFELHRLIKVQKLIAASPDLLLDEISFLGKVSAKSYPVKKLLPSEFLVKPPLPHVVVKQRGDSEKTDQHKMESSAENVVGRLSNQGHHQQSNYMPFANNPPASPAPNGYCFPPQPPPSGNHQQWLIPVMSPSEGLIYKPHPGMAHTGHYGGYYGHYMPTPMVMPQYHPGMGFPPPGNGYFPPYGMMPTIMNPYCSSQQQQQQQPNEQMNQFGHPGNLQNTQQQQQRSDNEPAPQQQQQPTKSYPRARKSRQGSTGSSPSGPQGISGSKSFRPFAAVDEDSNINNAPEQTMTTTTTTTRTTVTQTTRDGGGVTRVIKVVPHNAKLASENAARIFQSIQEERKRYDSSKP"
# SEQUENCE = SEQUENCE[432:600]

# SERCA (ordered)
SEQUENCE = "MEDGHSKTVEQSLNFFGTDPERGLTLDQIKANQKKYGPNELPTEEGKSIWQLVLEQFDDLLVKILLLAAIISFVLALFEEHEETFTAFVEPLVILLILIANAVVGVWQERNAESAIEALKEYEPEMGKVVRQDKSGIQKVRAKEIVPGDLVEVSVGDKIPADIRITHIYSTTLRIDQSILTGESVSVIKHTDAIPDPRAVNQDKKNILFSGTNVAAGKARGVVIGTGLSTAIGKIRTEMSETEEIKTPLQQKLDEFGEQLSKVISVICVAVWAINIGHFNDPAHGGSWIKGAIYYFKIAVALAVAAIPEGLPAVITTCLALGTRRMAKKNAIVRSLPSVETLGCTSVICSDKTGTLTTNQMSVSRMFIFDKVEGNDSSFLEFEMTGSTYEPIGEVFLNGQRIKAADYDTLQELSTICIMCNDSAIDYNEFKQAFEKVGEATETALIVLAEKLNSFSVNKSGLDRRSAAIACRGEIETKWKKEFTLEFSRDRKSMSSYCTPLKASRLGTGPKLFVKGAPEGVLERCTHARVGTTKVPLTSALKAKILALTGQYGTGRDTLRCLALAVADSPMKPDEMDLGDSTKFYQYEVNLTFVGVVGMLDPPRKEVFDSIVRCRAAGIRVIVITGDNKATAEAICRRIGVFAEDEDTTGKSYSGREFDDLSPTEQKAAVARSRLFSRVEPQHKSKIVEFLQSMNEISAMTGDGVNDAPALKKAEIGIAMGSGTAVAKSAAEMVLADDNFSSIVSAVEEGRAIYNNMKQFIRYLISSNIGEVVSIFLTAALGLPEALIPVQLLWVNLVTDGLPATALGFNPPDLDIMEKPPRKADEGLISGWLFFRYMAIGFYVGAATVGAAAWWFVFSDEGPKLSYWQLTHHLSCLGGGDEFKGVDCKIFSDPHAMTMALSVLVTIEMLNAMNSLSENQSLITMPPWCNLWLIGSMALSFTLHFVILYVDVLSTVFQVTPLSAEEWITVMKFSIPVVLLDETLKFVARKIADGESPIYKMHGIVLMWAVFFGLLYAMML"

CHECKPOINT = "/mnt/home/ssledzieski/Projects/rocketshp/models/grad_norm_alpha0.12_lr1e-5/model-epoch=19-train_loss=0.55.pt.ckpt"

logger.info("Loading structure model")
struct_encoder, _ = _get_structure_vae()
struct_encoder.eval().to(device)

logger.info("Loading sequence model")
esm_model = _get_model("esm3-open")
esm_model.eval().to(device)

logger.info("Loading tokenizers")
tokenizers = _get_tokenizers("esm3-open")
struct_tokenizer = tokenizers.structure

logger.info("Loading RSHP Model")
rshp_model = DynCorrModelWithTemperature.load_from_checkpoint(CHECKPOINT, strict=True)
rshp_model.eval().to(device)

logger.info("Generating intial features")
with torch.inference_mode():
    embeddings = esm3_embed([SEQUENCE], esm_model, tokenizers, device=device).squeeze()[1:-1].detach()
    struct_like = torch.zeros(embeddings.size()[0]).int().to(device)
    temperature = torch.ones_like(struct_like).to(device) * 290

    logger.debug(embeddings.size())
    logger.debug(struct_like.size())
    logger.debug(temperature.size())

logger.info("Performing inference")
with torch.inference_mode():
    y_hat = rshp_model({
        "seq_feats": embeddings.unsqueeze(0),
        "struct_feats": struct_like.unsqueeze(0),
        "temp": temperature.unsqueeze(0),
    })
    print(y_hat)


# plt.plot(np.arange(432, 432+len(SEQUENCE)), y_hat["rmsf"].squeeze().cpu().detach().numpy(), label="RMSF")
# xticks only at 432, 452, 472, 492, 512, 532, 552, 572, 592
# plt.xticks(np.arange(432, 432+len(SEQUENCE), 20), [str(i) for i in np.arange(432, 432+len(SEQUENCE), 20)])
# plt.savefig("rmsf.png")
